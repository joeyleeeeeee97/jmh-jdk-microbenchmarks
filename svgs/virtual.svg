<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (2,556 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.04%)</title><rect x="10.0" y="1171.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,091 samples, 42.68%)</title><rect x="10.5" y="1171.0" width="503.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,091 samples, 42.68%)</title><rect x="10.5" y="1155.0" width="503.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,091 samples, 42.68%)</title><rect x="10.5" y="1139.0" width="503.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,091 samples, 42.68%)</title><rect x="10.5" y="1123.0" width="503.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="1134.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1,091 samples, 42.68%)</title><rect x="10.5" y="1107.0" width="503.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="1118.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,091 samples, 42.68%)</title><rect x="10.5" y="1091.0" width="503.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="1102.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1,091 samples, 42.68%)</title><rect x="10.5" y="1075.0" width="503.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="1086.0">org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g>
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (1,091 samples, 42.68%)</title><rect x="10.5" y="1059.0" width="503.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="1070.0">org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1,091 samples, 42.68%)</title><rect x="10.5" y="1043.0" width="503.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="1054.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DirectMethodHandleAccessor.invoke (1,091 samples, 42.68%)</title><rect x="10.5" y="1027.0" width="503.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.5" y="1038.0">jdk/internal/reflect/DirectMethodHandleAccessor.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DirectMethodHandleAccessor.invokeImpl (1,091 samples, 42.68%)</title><rect x="10.5" y="1011.0" width="503.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="1022.0">jdk/internal/reflect/DirectMethodHandleAccessor.invokeImpl</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800111800.invokeExact_MT (1,091 samples, 42.68%)</title><rect x="10.5" y="995.0" width="503.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.5" y="1006.0">java/lang/invoke/LambdaForm$MH.0x0000000800111800.invokeExact_MT</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800111400.invoke (1,091 samples, 42.68%)</title><rect x="10.5" y="979.0" width="503.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.5" y="990.0">java/lang/invoke/LambdaForm$MH.0x0000000800111400.invoke</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800001800.invokeSpecial (1,091 samples, 42.68%)</title><rect x="10.5" y="963.0" width="503.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="974.0">java/lang/invoke/LambdaForm$DMH.0x0000000800001800.invokeSpecial</text>
</g>
<g>
<title>org/openjdk/bench/java/lang/thread/generated/ThreadBench_threadStart_jmhTest.threadStart_AverageTime (1,091 samples, 42.68%)</title><rect x="10.5" y="947.0" width="503.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.5" y="958.0">org/openjdk/bench/java/lang/thread/generated/ThreadBench_threadStart_..</text>
</g>
<g>
<title>org/openjdk/bench/java/lang/thread/generated/ThreadBench_threadStart_jmhTest.threadStart_avgt_jmhStub (1,091 samples, 42.68%)</title><rect x="10.5" y="931.0" width="503.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.5" y="942.0">org/openjdk/bench/java/lang/thread/generated/ThreadBench_threadStart_..</text>
</g>
<g>
<title>java/lang/Thread.join (1 samples, 0.04%)</title><rect x="10.9" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>org/openjdk/bench/java/lang/thread/ThreadBench.threadStart (1,089 samples, 42.61%)</title><rect x="11.4" y="915.0" width="502.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="926.0">org/openjdk/bench/java/lang/thread/ThreadBench.threadStart</text>
</g>
<g>
<title>java/lang/Thread.join (179 samples, 7.00%)</title><rect x="11.4" y="899.0" width="82.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.4" y="910.0">java/lang..</text>
</g>
<g>
<title>java/lang/Thread.join (178 samples, 6.96%)</title><rect x="11.4" y="883.0" width="82.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.4" y="894.0">java/lang..</text>
</g>
<g>
<title>java/lang/VirtualThread.joinNanos (178 samples, 6.96%)</title><rect x="11.4" y="867.0" width="82.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.4" y="878.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (178 samples, 6.96%)</title><rect x="11.4" y="851.0" width="82.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.4" y="862.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireSharedInterruptibly (178 samples, 6.96%)</title><rect x="11.4" y="835.0" width="82.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.4" y="846.0">java/util..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="14.2" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.getAndClearInterrupt (1 samples, 0.04%)</title><rect x="14.2" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="14.2" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (171 samples, 6.69%)</title><rect x="14.6" y="819.0" width="79.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.6" y="830.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (107 samples, 4.19%)</title><rect x="44.2" y="803.0" width="49.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (107 samples, 4.19%)</title><rect x="44.2" y="787.0" width="49.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="798.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="44.2" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="47.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (94 samples, 3.68%)</title><rect x="44.6" y="771.0" width="43.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="47.6" y="782.0">Unsa..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548964ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548964ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="45.5" y="755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="48.5" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.12%)</title><rect x="46.0" y="755.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="49.0" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;286822ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 286822ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="46.9" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="49.9" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.35%)</title><rect x="47.4" y="755.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="50.4" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;544868ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 544868ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="47.4" y="739.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="50.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_interrupted(bool) (1 samples, 0.04%)</title><rect x="48.3" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="51.3" y="750.0"></text>
</g>
<g>
<title>ThreadBlockInVMPreprocess&lt;void (JavaThread*)&gt;::~ThreadBlockInVMPreprocess() (1 samples, 0.04%)</title><rect x="48.8" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="51.8" y="750.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.12%)</title><rect x="49.2" y="739.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="52.2" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::interrupted(oopDesc*) (1 samples, 0.04%)</title><rect x="50.6" y="739.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="53.6" y="750.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="51.1" y="739.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="54.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (71 samples, 2.78%)</title><rect x="51.5" y="755.0" width="32.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="54.5" y="766.0">__..</text>
</g>
<g>
<title>system_call_fastpath (64 samples, 2.50%)</title><rect x="54.8" y="739.0" width="29.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.8" y="750.0">sy..</text>
</g>
<g>
<title>sys_futex (64 samples, 2.50%)</title><rect x="54.8" y="723.0" width="29.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.8" y="734.0">sy..</text>
</g>
<g>
<title>do_futex (61 samples, 2.39%)</title><rect x="55.2" y="707.0" width="28.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="58.2" y="718.0">do..</text>
</g>
<g>
<title>futex_wait (61 samples, 2.39%)</title><rect x="55.2" y="691.0" width="28.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.2" y="702.0">fu..</text>
</g>
<g>
<title>__smp_mb__after_atomic (1 samples, 0.04%)</title><rect x="55.7" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="56.2" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="56.6" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.74%)</title><rect x="57.1" y="675.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.1" y="686.0"></text>
</g>
<g>
<title>__list_add (1 samples, 0.04%)</title><rect x="60.3" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.3" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="60.8" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.8" y="670.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.12%)</title><rect x="61.2" y="659.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.2" y="670.0"></text>
</g>
<g>
<title>__list_add (1 samples, 0.04%)</title><rect x="62.2" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.2" y="654.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.27%)</title><rect x="62.6" y="659.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.6" y="670.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.12%)</title><rect x="64.5" y="643.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="67.5" y="654.0"></text>
</g>
<g>
<title>rcu_note_context_switch (1 samples, 0.04%)</title><rect x="65.4" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="68.4" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (35 samples, 1.37%)</title><rect x="65.9" y="675.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="68.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.08%)</title><rect x="76.5" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="79.5" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.12%)</title><rect x="77.4" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.4" y="670.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.16%)</title><rect x="78.8" y="659.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.8" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (1 samples, 0.04%)</title><rect x="80.2" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.2" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.12%)</title><rect x="80.6" y="659.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.6" y="670.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.12%)</title><rect x="82.0" y="675.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="85.0" y="686.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.08%)</title><rect x="83.4" y="707.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.4" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="84.3" y="755.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="87.3" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.27%)</title><rect x="84.8" y="755.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="87.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.43%)</title><rect x="88.0" y="771.0" width="5.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="91.0" y="782.0"></text>
</g>
<g>
<title>system_call_after_swapgs (11 samples, 0.43%)</title><rect x="88.0" y="755.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.0" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="93.1" y="771.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="96.1" y="782.0"></text>
</g>
<g>
<title>java/lang/VirtualThread.joinNanos (1 samples, 0.04%)</title><rect x="93.6" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (1 samples, 0.04%)</title><rect x="93.6" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireSharedInterruptibly (1 samples, 0.04%)</title><rect x="93.6" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="93.6" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.getAndClearInterrupt (1 samples, 0.04%)</title><rect x="93.6" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadBuilders$VirtualThreadFactory.newThread (1 samples, 0.04%)</title><rect x="93.6" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadBuilders$VirtualThreadFactory.newThread (119 samples, 4.66%)</title><rect x="94.0" y="899.0" width="55.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.0" y="910.0">java/..</text>
</g>
<g>
<title>java/lang/VirtualThread.start (791 samples, 30.95%)</title><rect x="149.0" y="899.0" width="365.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.0" y="910.0">java/lang/VirtualThread.start</text>
</g>
<g>
<title>java/lang/ThreadBuilders$VirtualThreadFactory.newThread (1 samples, 0.04%)</title><rect x="149.4" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.4" y="894.0"></text>
</g>
<g>
<title>java/lang/VirtualThread.start (789 samples, 30.87%)</title><rect x="149.9" y="883.0" width="364.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.9" y="894.0">java/lang/VirtualThread.start</text>
</g>
<g>
<title>java/lang/VirtualThread.submitRunContinuation (786 samples, 30.75%)</title><rect x="149.9" y="867.0" width="362.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.9" y="878.0">java/lang/VirtualThread.submitRunContinuation</text>
</g>
<g>
<title>java/lang/VirtualThread.submitRunContinuation (786 samples, 30.75%)</title><rect x="149.9" y="851.0" width="362.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="862.0">java/lang/VirtualThread.submitRunContinuation</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (786 samples, 30.75%)</title><rect x="149.9" y="835.0" width="362.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.9" y="846.0">java/util/concurrent/ForkJoinPool.execute</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (786 samples, 30.75%)</title><rect x="149.9" y="819.0" width="362.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.9" y="830.0">java/util/concurrent/ForkJoinPool.externalSubmit</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (786 samples, 30.75%)</title><rect x="149.9" y="803.0" width="362.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.9" y="814.0">java/util/concurrent/ForkJoinPool.externalPush</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (786 samples, 30.75%)</title><rect x="149.9" y="787.0" width="362.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="798.0">java/util/concurrent/ForkJoinPool.signalWork</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (786 samples, 30.75%)</title><rect x="149.9" y="771.0" width="362.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.9" y="782.0">java/util/concurrent/locks/LockSupport.unpark</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (568 samples, 22.22%)</title><rect x="250.5" y="755.0" width="262.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.5" y="766.0">jdk/internal/misc/Unsafe.unpark</text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (1 samples, 0.04%)</title><rect x="251.0" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="254.0" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="251.4" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="254.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="251.9" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="254.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (53 samples, 2.07%)</title><rect x="252.4" y="739.0" width="24.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="255.4" y="750.0">U..</text>
</g>
<g>
<title>SafeThreadsListPtr::release_stable_list() (3 samples, 0.12%)</title><rect x="254.2" y="723.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="257.2" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="255.6" y="723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="258.6" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.16%)</title><rect x="256.1" y="723.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="259.1" y="734.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="257.4" y="707.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="260.4" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.08%)</title><rect x="257.9" y="723.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="260.9" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (37 samples, 1.45%)</title><rect x="258.8" y="723.0" width="17.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="261.8" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="275.9" y="723.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="278.9" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.43%)</title><rect x="276.8" y="739.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="279.8" y="750.0"></text>
</g>
<g>
<title>system_call_after_swapgs (11 samples, 0.43%)</title><rect x="276.8" y="723.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="279.8" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (499 samples, 19.52%)</title><rect x="281.9" y="739.0" width="230.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="284.9" y="750.0">__pthread_cond_signal</text>
</g>
<g>
<title>system_call_after_swapgs (1 samples, 0.04%)</title><rect x="289.3" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.3" y="734.0"></text>
</g>
<g>
<title>system_call_fastpath (482 samples, 18.86%)</title><rect x="289.8" y="723.0" width="222.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.8" y="734.0">system_call_fastpath</text>
</g>
<g>
<title>sys_futex (482 samples, 18.86%)</title><rect x="289.8" y="707.0" width="222.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="292.8" y="718.0">sys_futex</text>
</g>
<g>
<title>do_futex (480 samples, 18.78%)</title><rect x="290.7" y="691.0" width="221.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="293.7" y="702.0">do_futex</text>
</g>
<g>
<title>futex_wake_op (472 samples, 18.47%)</title><rect x="290.7" y="675.0" width="217.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="293.7" y="686.0">futex_wake_op</text>
</g>
<g>
<title>_raw_spin_lock (22 samples, 0.86%)</title><rect x="307.8" y="659.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="310.8" y="670.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (2 samples, 0.08%)</title><rect x="317.9" y="659.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key (16 samples, 0.63%)</title><rect x="318.8" y="659.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.8" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (7 samples, 0.27%)</title><rect x="323.0" y="643.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.0" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (9 samples, 0.35%)</title><rect x="326.2" y="659.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.2" y="670.0"></text>
</g>
<g>
<title>wake_futex (386 samples, 15.10%)</title><rect x="330.4" y="659.0" width="178.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.4" y="670.0">wake_futex</text>
</g>
<g>
<title>__unqueue_futex (20 samples, 0.78%)</title><rect x="346.1" y="643.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="349.1" y="654.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.04%)</title><rect x="354.9" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.9" y="638.0"></text>
</g>
<g>
<title>wake_up_state (332 samples, 12.99%)</title><rect x="355.3" y="643.0" width="153.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="358.3" y="654.0">wake_up_state</text>
</g>
<g>
<title>try_to_wake_up (332 samples, 12.99%)</title><rect x="355.3" y="627.0" width="153.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.3" y="638.0">try_to_wake_up</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.12%)</title><rect x="356.2" y="611.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (327 samples, 12.79%)</title><rect x="357.6" y="611.0" width="151.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="360.6" y="622.0">_raw_spin_unlock_ir..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="508.6" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="511.6" y="686.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.27%)</title><rect x="509.1" y="675.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.1" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="512.3" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="515.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/vm/ThreadContainers$RootContainer.onStart (3 samples, 0.12%)</title><rect x="512.7" y="867.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (3 samples, 0.12%)</title><rect x="512.7" y="851.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,462 samples, 57.20%)</title><rect x="514.1" y="1171.0" width="675.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.1" y="1182.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,462 samples, 57.20%)</title><rect x="514.1" y="1155.0" width="675.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.1" y="1166.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.awaitWork (422 samples, 16.51%)</title><rect x="515.1" y="1139.0" width="194.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.1" y="1150.0">java/util/concurrent/Fork..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="534.9" y="1123.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="537.9" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="534.9" y="1107.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="537.9" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.55%)</title><rect x="535.8" y="1123.0" width="6.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="538.8" y="1134.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.47%)</title><rect x="536.8" y="1107.0" width="5.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="539.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.getAndClearInterrupt (1 samples, 0.04%)</title><rect x="542.3" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (36 samples, 1.41%)</title><rect x="542.8" y="1123.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.08%)</title><rect x="559.4" y="1123.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (322 samples, 12.60%)</title><rect x="560.3" y="1123.0" width="148.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.3" y="1134.0">java/util/concurren..</text>
</g>
<g>
<title>clock_gettime (8 samples, 0.31%)</title><rect x="596.3" y="1107.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="599.3" y="1118.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.31%)</title><rect x="596.3" y="1091.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="599.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (236 samples, 9.23%)</title><rect x="600.0" y="1107.0" width="109.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.0" y="1118.0">jdk/internal/..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="606.5" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="609.5" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.23%)</title><rect x="606.9" y="1091.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="609.9" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (200 samples, 7.82%)</title><rect x="609.7" y="1091.0" width="92.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="612.7" y="1102.0">Unsafe_Park</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;286822ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 286822ul&gt;::oop_access_barrier(oopDesc*, long) (9 samples, 0.35%)</title><rect x="612.5" y="1075.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="615.5" y="1086.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="616.6" y="1075.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="619.6" y="1086.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.20%)</title><rect x="617.1" y="1075.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="620.1" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;286822ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 286822ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="618.0" y="1059.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="621.0" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus) (2 samples, 0.08%)</title><rect x="618.5" y="1059.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="621.5" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.47%)</title><rect x="619.4" y="1075.0" width="5.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="622.4" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;544868ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 544868ul&gt;::oop_access_barrier(void*) (4 samples, 0.16%)</title><rect x="620.8" y="1059.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="623.8" y="1070.0"></text>
</g>
<g>
<title>JavaThread::is_interrupted(bool) (2 samples, 0.08%)</title><rect x="622.6" y="1059.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.6" y="1070.0"></text>
</g>
<g>
<title>ThreadBlockInVMPreprocess&lt;void (JavaThread*)&gt;::~ThreadBlockInVMPreprocess() (1 samples, 0.04%)</title><rect x="623.5" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="626.5" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::interrupted(oopDesc*) (1 samples, 0.04%)</title><rect x="624.0" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="627.0" y="1070.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="624.5" y="1059.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="627.5" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.08%)</title><rect x="624.9" y="1075.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="627.9" y="1086.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.08%)</title><rect x="624.9" y="1059.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="627.9" y="1070.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.08%)</title><rect x="624.9" y="1043.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="627.9" y="1054.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="624.9" y="1027.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.9" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="624.9" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.9" y="1022.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="625.4" y="1011.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.4" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (147 samples, 5.75%)</title><rect x="625.9" y="1075.0" width="67.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="628.9" y="1086.0">__pthre..</text>
</g>
<g>
<title>system_call_fastpath (139 samples, 5.44%)</title><rect x="629.5" y="1059.0" width="64.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="632.5" y="1070.0">system_..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.31%)</title><rect x="629.5" y="1043.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.5" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="633.2" y="1043.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.2" y="1054.0"></text>
</g>
<g>
<title>sys_futex (130 samples, 5.09%)</title><rect x="633.7" y="1043.0" width="60.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="636.7" y="1054.0">sys_fu..</text>
</g>
<g>
<title>do_futex (127 samples, 4.97%)</title><rect x="634.6" y="1027.0" width="58.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.6" y="1038.0">do_futex</text>
</g>
<g>
<title>futex_wait (125 samples, 4.89%)</title><rect x="635.1" y="1011.0" width="57.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.1" y="1022.0">futex_..</text>
</g>
<g>
<title>_raw_spin_unlock (3 samples, 0.12%)</title><rect x="636.9" y="995.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.9" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (52 samples, 2.03%)</title><rect x="638.3" y="995.0" width="24.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.3" y="1006.0">f..</text>
</g>
<g>
<title>hrtimer_start_range_ns (24 samples, 0.94%)</title><rect x="643.9" y="979.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.9" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.90%)</title><rect x="644.3" y="963.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.3" y="974.0"></text>
</g>
<g>
<title>plist_add (6 samples, 0.23%)</title><rect x="654.9" y="979.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="657.9" y="990.0"></text>
</g>
<g>
<title>__list_add (4 samples, 0.16%)</title><rect x="655.9" y="963.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.9" y="974.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.39%)</title><rect x="657.7" y="979.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="660.7" y="990.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="661.9" y="963.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="664.9" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="661.9" y="947.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.9" y="958.0"></text>
</g>
<g>
<title>futex_wait_setup (54 samples, 2.11%)</title><rect x="662.3" y="995.0" width="25.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="665.3" y="1006.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.20%)</title><rect x="673.9" y="979.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="676.9" y="990.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.51%)</title><rect x="676.2" y="979.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.2" y="990.0"></text>
</g>
<g>
<title>get_futex_key (7 samples, 0.27%)</title><rect x="682.2" y="979.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="685.2" y="990.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (4 samples, 0.16%)</title><rect x="683.6" y="963.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="686.6" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (1 samples, 0.04%)</title><rect x="685.4" y="979.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.4" y="990.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.12%)</title><rect x="685.9" y="979.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.9" y="990.0"></text>
</g>
<g>
<title>hash_futex (6 samples, 0.23%)</title><rect x="687.3" y="995.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.3" y="1006.0"></text>
</g>
<g>
<title>hrtimer_init (4 samples, 0.16%)</title><rect x="690.0" y="995.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="693.0" y="1006.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.08%)</title><rect x="691.9" y="995.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.9" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="692.8" y="1011.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="693.3" y="1027.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="696.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.08%)</title><rect x="693.7" y="1075.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="696.7" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.35%)</title><rect x="694.6" y="1075.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="697.6" y="1086.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.27%)</title><rect x="695.6" y="1059.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="698.6" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="698.8" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="701.8" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus) (6 samples, 0.23%)</title><rect x="699.3" y="1075.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="702.3" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.27%)</title><rect x="702.0" y="1091.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="705.0" y="1102.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.27%)</title><rect x="702.0" y="1075.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (8 samples, 0.31%)</title><rect x="705.3" y="1091.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="708.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.08%)</title><rect x="709.0" y="1123.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,038 samples, 40.61%)</title><rect x="709.9" y="1139.0" width="479.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.9" y="1150.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.casSlotToNull (125 samples, 4.89%)</title><rect x="710.3" y="1123.0" width="57.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.3" y="1134.0">java/u..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (125 samples, 4.89%)</title><rect x="710.3" y="1107.0" width="57.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.3" y="1118.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.compareAndSet (125 samples, 4.89%)</title><rect x="710.3" y="1091.0" width="57.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.3" y="1102.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.runtimeTypeCheck (125 samples, 4.89%)</title><rect x="710.3" y="1075.0" width="57.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.3" y="1086.0">java/l..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$Array.reflectiveTypeCheck (125 samples, 4.89%)</title><rect x="710.3" y="1059.0" width="57.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="1070.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (912 samples, 35.68%)</title><rect x="768.0" y="1123.0" width="421.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.0" y="1134.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.awaitWork (2 samples, 0.08%)</title><rect x="775.9" y="1107.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (893 samples, 34.94%)</title><rect x="776.8" y="1107.0" width="412.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.8" y="1118.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask$RunnableExecuteAction.exec (893 samples, 34.94%)</title><rect x="776.8" y="1091.0" width="412.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.8" y="1102.0">java/util/concurrent/ForkJoinTask$RunnableExecuteAction...</text>
</g>
<g>
<title>java/lang/VirtualThread$$Lambda$63.0x0000000800143e88.run (893 samples, 34.94%)</title><rect x="776.8" y="1075.0" width="412.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.8" y="1086.0">java/lang/VirtualThread$$Lambda$63.0x0000000800143e88.run</text>
</g>
<g>
<title>java/lang/VirtualThread.runContinuation (893 samples, 34.94%)</title><rect x="776.8" y="1059.0" width="412.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.8" y="1070.0">java/lang/VirtualThread.runContinuation</text>
</g>
<g>
<title>java/lang/VirtualThread.afterTerminate (524 samples, 20.50%)</title><rect x="935.2" y="1043.0" width="241.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.2" y="1054.0">java/lang/VirtualThread.afterTer..</text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.countDown (520 samples, 20.34%)</title><rect x="935.2" y="1027.0" width="240.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.2" y="1038.0">java/util/concurrent/CountDownLa..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (520 samples, 20.34%)</title><rect x="935.2" y="1011.0" width="240.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.2" y="1022.0">java/util/concurrent/locks/Abstr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.signalNext (520 samples, 20.34%)</title><rect x="935.2" y="995.0" width="240.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.2" y="1006.0">java/util/concurrent/locks/Abstr..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (520 samples, 20.34%)</title><rect x="935.2" y="979.0" width="240.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.2" y="990.0">java/util/concurrent/locks/LockS..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (513 samples, 20.07%)</title><rect x="938.4" y="963.0" width="236.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.4" y="974.0">jdk/internal/misc/Unsafe.unpark</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="940.2" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="943.2" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="940.7" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="943.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (58 samples, 2.27%)</title><rect x="941.2" y="947.0" width="26.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="944.2" y="958.0">U..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.12%)</title><rect x="943.5" y="931.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="946.5" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.20%)</title><rect x="944.9" y="931.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="947.9" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="946.7" y="915.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="949.7" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (35 samples, 1.37%)</title><rect x="947.2" y="931.0" width="16.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="950.2" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="963.3" y="931.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="966.3" y="942.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.08%)</title><rect x="963.8" y="931.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="966.8" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.27%)</title><rect x="964.7" y="931.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="967.7" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.12%)</title><rect x="967.9" y="947.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="970.9" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.12%)</title><rect x="967.9" y="931.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (446 samples, 17.45%)</title><rect x="969.3" y="947.0" width="205.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="972.3" y="958.0">__pthread_cond_signal</text>
</g>
<g>
<title>system_call_fastpath (440 samples, 17.21%)</title><rect x="972.1" y="931.0" width="203.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.1" y="942.0">system_call_fastpath</text>
</g>
<g>
<title>sys_futex (440 samples, 17.21%)</title><rect x="972.1" y="915.0" width="203.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.1" y="926.0">sys_futex</text>
</g>
<g>
<title>do_futex (439 samples, 17.18%)</title><rect x="972.6" y="899.0" width="202.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="975.6" y="910.0">do_futex</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.08%)</title><rect x="972.6" y="883.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="975.6" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="973.5" y="883.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.5" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (433 samples, 16.94%)</title><rect x="973.9" y="883.0" width="199.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.9" y="894.0">futex_wake_op</text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.04%)</title><rect x="991.0" y="867.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="994.0" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock (25 samples, 0.98%)</title><rect x="991.5" y="867.0" width="11.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.5" y="878.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.35%)</title><rect x="1003.0" y="867.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.0" y="878.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (9 samples, 0.35%)</title><rect x="1003.0" y="851.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.0" y="862.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (3 samples, 0.12%)</title><rect x="1007.2" y="867.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.2" y="878.0"></text>
</g>
<g>
<title>wake_futex (358 samples, 14.01%)</title><rect x="1008.6" y="867.0" width="165.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1011.6" y="878.0">wake_futex</text>
</g>
<g>
<title>__unqueue_futex (20 samples, 0.78%)</title><rect x="1022.0" y="851.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1025.0" y="862.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.04%)</title><rect x="1030.7" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.7" y="846.0"></text>
</g>
<g>
<title>wake_up_state (309 samples, 12.09%)</title><rect x="1031.2" y="851.0" width="142.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1034.2" y="862.0">wake_up_state</text>
</g>
<g>
<title>try_to_wake_up (309 samples, 12.09%)</title><rect x="1031.2" y="835.0" width="142.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.2" y="846.0">try_to_wake_up</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (308 samples, 12.05%)</title><rect x="1031.7" y="819.0" width="142.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1034.7" y="830.0">_raw_spin_unlock_i..</text>
</g>
<g>
<title>hash_futex (3 samples, 0.12%)</title><rect x="1173.8" y="883.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1176.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/vm/ThreadContainers$RootContainer.onExit (4 samples, 0.16%)</title><rect x="1175.2" y="1027.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (4 samples, 0.16%)</title><rect x="1175.2" y="1011.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.awaitWork (3 samples, 0.12%)</title><rect x="1175.7" y="995.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/vm/Continuation.run (26 samples, 1.02%)</title><rect x="1177.1" y="1043.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/vm/Continuation.enterSpecial (12 samples, 0.47%)</title><rect x="1182.2" y="1027.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/Continuation.enter (11 samples, 0.43%)</title><rect x="1182.6" y="1011.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/vm/Continuation.enter0 (11 samples, 0.43%)</title><rect x="1182.6" y="995.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/VirtualThread$VThreadContinuation$$Lambda$62.0x0000000800143c78.run (11 samples, 0.43%)</title><rect x="1182.6" y="979.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.6" y="990.0"></text>
</g>
<g>
<title>java/lang/VirtualThread$VThreadContinuation.lambda$new$0 (11 samples, 0.43%)</title><rect x="1182.6" y="963.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.6" y="974.0"></text>
</g>
<g>
<title>java/lang/VirtualThread.run (11 samples, 0.43%)</title><rect x="1182.6" y="947.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.6" y="958.0"></text>
</g>
<g>
<title>java/lang/VirtualThread.unmount (11 samples, 0.43%)</title><rect x="1182.6" y="931.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/vm/Continuation.mount (3 samples, 0.12%)</title><rect x="1187.7" y="1027.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.7" y="1038.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.08%)</title><rect x="1189.1" y="1171.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.1" y="1182.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.08%)</title><rect x="1189.1" y="1155.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1192.1" y="1166.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.08%)</title><rect x="1189.1" y="1139.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.1" y="1150.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.08%)</title><rect x="1189.1" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1134.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.08%)</title><rect x="1189.1" y="1107.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.08%)</title><rect x="1189.1" y="1091.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1102.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) (2 samples, 0.08%)</title><rect x="1189.1" y="1075.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.1" y="1086.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*) (2 samples, 0.08%)</title><rect x="1189.1" y="1059.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.04%)</title><rect x="1189.1" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.04%)</title><rect x="1189.1" y="1027.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.04%)</title><rect x="1189.1" y="1011.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1189.1" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.04%)</title><rect x="1189.1" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.1" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="1043.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.5" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="1027.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="1011.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="979.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="963.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="974.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="947.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="931.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="915.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.5" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.5" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="563.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="515.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="483.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="451.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="419.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="403.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="387.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="371.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="355.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="339.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="323.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="307.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="291.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="275.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="259.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="243.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="227.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="211.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.5" y="222.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="195.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.5" y="179.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.5" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.5" y="163.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.5" y="147.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.5" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.5" y="131.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.5" y="115.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.5" y="99.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="110.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.04%)</title><rect x="1189.5" y="83.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="94.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.04%)</title><rect x="1189.5" y="67.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="78.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.04%)</title><rect x="1189.5" y="51.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.5" y="62.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::propagate(MethodLiveness*) (1 samples, 0.04%)</title><rect x="1189.5" y="35.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="46.0"></text>
</g>
</g>
</svg>
